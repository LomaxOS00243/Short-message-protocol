import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;

public class ServerSMPForm {

    private JPanel panel1;
    private JButton startConnection;
    private JRadioButton connectionStatus;
    private JPanel panel2;
    private JTextArea threads;
    private JButton stopConnection;

    ServerSMPLogic serverSMP;


    public ServerSMPForm() {
        // Start the server
        startConnection.addActionListener(e -> {
            connectionStatus.setSelected(true);
            connectionStatus.setBackground(Color.green);
            startConnection.setText("Stop");
            stopConnection.setVisible(true);
            startConnection.setVisible(false);

            new Thread(() -> { // New thread to start the server
                try {
                    System.setProperty("jdk.tls.server.protocols", "TLSv1.2");
                    serverSMP = new ServerSMPLogic();
                    serverSMP.setupConnection(); // Listen for connection on port 17

                    while (connectionStatus.isSelected()) {
                        System.out.println("Waiting for a connection...\n");
                        serverSMP.acceptConnection(); // Accept the connection
                        System.out.println("Connection accepted\n");
                        new Thread(() -> {
                            try {
                                // Start the service thread for each connection
                                Thread theThread = new Thread(new ServerSMPThread(serverSMP.getSocket(), threads));
                                theThread.start();
                            } catch (Exception e1) {
                                e1.printStackTrace();
                            }
                        }).start();
                    }
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            }).start();
        });

        // Stop the server
        stopConnection.addActionListener(e -> {
            connectionStatus.setSelected(false);
            connectionStatus.setBackground(Color.red);
            startConnection.setText("Start");
            startConnection.setVisible(true);
            stopConnection.setVisible(false);

            //serverSMP.sendCloseConnectionMessage();

            try {
                serverSMP.closeConnection();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        });
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new BorderLayout(0, 0));
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new GridBagLayout());
        panel3.setBackground(new Color(-987931));
        panel3.setForeground(new Color(-987931));
        panel1.add(panel3, BorderLayout.NORTH);
        final JPanel spacer1 = new JPanel();
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 1;
        gbc.weightx = 3.0;
        gbc.fill = GridBagConstraints.VERTICAL;
        panel3.add(spacer1, gbc);
        connectionStatus = new JRadioButton();
        connectionStatus.setEnabled(true);
        connectionStatus.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.5;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.ipadx = 5;
        panel3.add(connectionStatus, gbc);
        startConnection = new JButton();
        startConnection.setBackground(new Color(-8479649));
        startConnection.setForeground(new Color(-12828863));
        startConnection.setHideActionText(true);
        startConnection.setText("Start");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(0, 50, 0, 0);
        panel3.add(startConnection, gbc);
        stopConnection = new JButton();
        stopConnection.setBackground(new Color(-8479649));
        stopConnection.setText("Stop");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 0;
        gbc.ipadx = 35;
        gbc.insets = new Insets(0, 50, 0, 0);
        panel3.add(stopConnection, gbc);
        panel2 = new JPanel();
        panel2.setLayout(new GridBagLayout());
        panel1.add(panel2, BorderLayout.CENTER);
        panel2.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(new Color(-4473925)), null, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        threads = new JTextArea();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.gridwidth = 2;
        gbc.weightx = 5.0;
        gbc.weighty = 40.0;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.insets = new Insets(50, 0, 0, 0);
        panel2.add(threads, gbc);
        final JScrollPane scrollPane1 = new JScrollPane();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.ipadx = 15;
        gbc.insets = new Insets(50, 0, 0, 0);
        panel2.add(scrollPane1, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }

    private void createUIComponents() {
        // TODO: place custom component creation code here
    }

    public JPanel getPanel1() {
        return panel1;
    }


    public static void main(String[] args) {

        JFrame frame = new JFrame("Server Host GUI");

        ServerSMPForm gui = new ServerSMPForm();
        gui.getPanel1().setBackground(Color.orange);
        gui.stopConnection.setVisible(false);
        frame.add(gui.getPanel1());
        frame.setSize(450, 550);
        frame.setVisible(true);


    }
}
